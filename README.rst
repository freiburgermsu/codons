Translating Genetic Sequences into Protein sequences 
--------------------------------------------------------------------------------------------------------

|PyPI version| |Actions Status| |Downloads| |License|

.. |PyPI version| image:: https://img.shields.io/pypi/v/codons.svg?logo=PyPI&logoColor=brightgreen
   :target: https://pypi.org/project/codons/
   :alt: PyPI version

.. |Actions Status| image:: https://github.com/freiburgermsu/codons/workflows/Test%20codons/badge.svg
   :target: https://github.com/freiburgermsu/codons/actions
   :alt: Actions Status

.. |License| image:: https://img.shields.io/badge/License-MIT-blue.svg
   :target: https://opensource.org/licenses/MIT
   :alt: License

.. |Downloads| image:: https://pepy.tech/badge/codons
   :target: https://pepy.tech/project/codons
   :alt: Downloads



Installation
+++++++++++++

The following command installs ``Codons`` in a command prompt/terminal environment::
 
 pip install codons

_________________


+++++++++++
__init__
+++++++++++

The data environment, in a `Python IDE <https://www.simplilearn.com/tutorials/python-tutorial/python-ide>`_, is defined: 

.. code-block:: python

  import codons
  cd = codons.Codons(codons_table = 'standard', amino_acids_form = 'full_name', hyphenated = None)

- *codons_table* ``str``: specifies the framework for translating codons into amino acids, where the `standard translation table <https://en.wikipedia.org/wiki/DNA_and_RNA_codon_tables>`_ is used by default.
- *amino_acids_form* ``str``: specifies whether the amino acid ``full_name``, ``three_letter``, or ``one_letter`` nomenclature will be used in the protein sequence. 
- *hyphenated* ``bool``: specifies whether amino acid residues of the protein sequence are delimited by hyphens, where ``None`` defaults to ``True`` for ``amino_acids_for = full_name`` and ``amino_acids_for = three_letter`` and ``False`` for ``amino_acids_for = one_letter``.

++++++++++++++++
translate()
++++++++++++++++

The parameterized data is fitted to the Hill equation, with the following arguments and their default values:

.. code-block:: python

 cd.translate(sequence)

- *sequence* ``str``: The genetic seqeuence, of either DNA or RNA, that wil lbe parsed and translated into a protein sequence. The sequence is case-insensitive, and can even possess line numbers or column-spaces, which the code ignores. 


++++++++++++++++
export()
++++++++++++++++

The genetic sequence and the corresponding protein sequence are exported:

.. code-block:: python

 cd.export(export_name = None, export_directory = None)


- *export_directory* ``str``: optionally specifies a path to where the content will be exported, where `None` selects the current working directory.
- *export_name* ``str``: optionally specifies a name for the folder of exported content, where `None` enables the code to design a unique folder name for simulation.


++++++++++++++++++++++++++
Accessible content
++++++++++++++++++++++++++
The ``Codons`` object retains numerous components that are accessible to the user: 

- *proteins* ``list``: A list of the protein sequences that are generated by the parameterized genetic sequence.
- *amino_acid_synonyms* ``dict``: The synonyms for each amino acid, with keys of the full amino acid name.
- *codons_table* ``dict``: The translation table between genetic codons and amion acid residues, which is accessed with case-insensitivity.
- *paths* & *parameters* ``dict``: Collections of the paths and parameters are are defined for the simulation.


Execution
+++++++++++

Codons is executed through the following sequence of the aforementioned functions, which is exemplified in the `example Notebook of our GitHub repository <./examples>`_:

.. code-block:: python

   import codons
   cd = codons.Codons(codons_table = 'standard', amino_acids_form = 'full_name', hyphenated = None)
   cd.translate(sequence)
   cd.export(export_name = None, export_directory = None)
